name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint_fix:
    name: Fix styling
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Setup pnpm
      uses: pnpm/action-setup@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Fix format
      run: pnpm run format:fix

    - name: Fix linting
      run: pnpm run lint:fix

    - name: Commit potential changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Fix styling

  lint:
    name: Check styling
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Setup pnpm
      uses: pnpm/action-setup@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Check format
      run: pnpm run format

    - name: Check linting
      run: pnpm run lint

  tests:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.x", "18.x"]
        solana: ["1.10.34"]

    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Solana
      uses: ./.github/actions/install-solana
      with:
        solana_version: ${{ matrix.solana }}

    - name: Install pnpm
      uses: pnpm/action-setup@v2

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Start local validator using Amman
      run: pnpm validator

    - name: Build and run tests
      run: pnpm test

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [lint, tests]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Get Build Version
        run: |
          pnpm packages:version
          echo "BUILD_VERSION=$(./configs/get-latest-version.sh)" | tee $GITHUB_ENV
          git reset --hard && git clean -df
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: lorisleiva/changesets-action@main
        with:
          commit: "Release packages"
          title: "Release packages"
          publish: pnpm packages:publish
          createGithubReleases: "aggregate"
          githubReleaseName: v${{ env.BUILD_VERSION }}
          githubTagName: v${{ env.BUILD_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
